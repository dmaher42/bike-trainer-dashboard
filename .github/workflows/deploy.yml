name: Deploy Vite site to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: |
          # Try a clean install using package-lock (preferred). If npm ci fails
          # (lockfile inconsistent), fall back to npm install so CI can proceed.
          npm ci || npm install

      - name: Build
        run: npm run build

      # Optional: SPA fallback so deep links work on GitHub Pages
      - name: Add 404 fallback
        run: |
          if [ -f docs/index.html ]; then
            cp docs/index.html docs/404.html
          else
            echo "docs/index.html not found; skipping 404.html fallback"
            ls -la docs || true
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Cancel previous in-progress Pages deployments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          set -e
          # ensure jq is available
          sudo apt-get update -y
          sudo apt-get install -y jq

          owner=$(echo "$REPO" | cut -d/ -f1)
          repo=$(echo "$REPO" | cut -d/ -f2)

          echo "Checking for in-progress Pages deployments in $REPO"
          deployments_json=$(curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$owner/$repo/pages/deployments")

          echo "$deployments_json" | jq -r '.deployments[]? | select(.status == "in_progress") | .id' | while read -r id; do
            if [ -n "$id" ]; then
              echo "Cancelling Pages deployment $id"
              curl -sS -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$owner/$repo/pages/deployments/$id/cancel" || true
            fi
          done

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
